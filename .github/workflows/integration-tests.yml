name: Zombienet Integration Tests

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions: {}

env:
  IMAGE_NAME: paritypr/zombienet
  VERSION: ${{ github.sha }}

jobs:
  # build_image:
  #   name: Build image
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 30
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v.4.2.0

  #     - name: npm build
  #       run: |
  #         cd javascript
  #         npm install
  #         npm dedupe
  #         npm run clean
  #         npm run build

  #     - name: Build Docker image
  #       uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
  #       with:
  #         file: ./scripts/ci/docker/zombienet_injected.Dockerfile
  #         context: .
  #         push: false
  #         tags: |
  #           ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
  #           ${{ env.IMAGE_NAME }}:latest

  build_push_image:
    name: Build and Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    timeout-minutes: 30
    # needs: [build_image]
    steps:
      - name: Check out the repo
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v.4.2.0

      - name: npm build
        run: |
          cd javascript
          npm install
          npm dedupe
          npm run clean
          npm run build

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Build Docker image
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          file: ./scripts/ci/docker/zombienet_injected.Dockerfile
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.IMAGE_NAME }}:latest

  set-variables:
    name: Set variables
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.version.outputs.IMAGE }}
    steps:
      - name: Define version
        id: version
        run: |
          export IMAGE="${{ env.IMAGE_NAME }}:${{ env.VERSION }}"
          echo "IMAGE=${IMAGE}" >> $GITHUB_OUTPUT
          echo "set IMAGE=${IMAGE}"

  # example job
  zombienet-smoke:
    name: Zombienet Smoke Tests
    runs-on: zombienet-arc-runner
    timeout-minutes: 30
    container:
      image: ${{ needs.set-variables.outputs.VERSION }}
    needs: [build_push_image, set-variables]
    env:
      # LOCAL_DIR: "/builds/parity/mirrors/zombienet/tests"
      RUN_IN_CONTAINER: 1
      FF_DISABLE_UMASK_FOR_DOCKER_EXECUTOR: 1
      GHA_CLUSTER_SERVER_ADDR: "https://kubernetes.default:443"
    steps:
      - name: Check out the repo
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v.4.2.0

      - name: smoke test
        run: |
          echo "Zombienet Tests Config"
          echo "${ZOMBIENET_IMAGE}"
          echo "${GH_DIR}"
          # echo "${LOCAL_DIR}"
          export DEBUG=zombie
          export ZOMBIENET_INTEGRATION_TEST_IMAGE="docker.io/paritypr/polkadot-debug:master"
          export COL_IMAGE="docker.io/paritypr/colander:master"
          # TODO: add script to get latest from dockerhub
          export CUMULUS_TEST_IMAGE="docker.io/paritypr/test-parachain:c90f9713b5bc73a9620b2e72b226b4d11e018190"
          echo "relay_image ${ZOMBIENET_INTEGRATION_TEST_IMAGE}"
          echo "col_image ${COL_IMAGE}"

          /home/nonroot/zombie-net/scripts/ci/run-test-local-env-manager.sh --local-dir="$(pwd)/tests" --test="0001-smoke.zndsl"

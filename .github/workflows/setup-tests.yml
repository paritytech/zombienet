name: Zombienet Setup Tests

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  ZOMBIE_TRACE: 1
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ZOMBIE_RELEASES_FILE: /tmp/releases.json

permissions: {}

jobs:
    get_releases:
      # get the releases from macos is hitting the rate limit on the api constantly
      # so, we download the whole info here and we share as artifact.
      runs-on: ubuntu-latest
      steps:
        - name: perform_request
          run: |
            curl -s https://api.github.com/repos/paritytech/polkadot-sdk/releases > releases.json
        - name: upload_releases
          uses: actions/upload-artifact@v4
          with:
            name: releases-${{ github.sha }}.json
            path: |
                releases.json

    setup_test:
        needs: [get_releases]
        strategy:
          matrix:
            target: [ubuntu-latest, macos-latest]
        runs-on: ${{ matrix.target }}
        steps:
          - name: checkout
            uses: actions/checkout@v4
            with:
              fetch-depth: 0
          - name: setup node
            uses: actions/setup-node@v4
            with:
              node-version: '20'
          - name: Download request file
            uses: actions/download-artifact@v4.1.8
            with:
              name: releases-${{ github.sha }}.json
          - run: |
              ls -l
              mv releases.json /tmp
          - run: npm install && npm update
            working-directory: "./javascript"
          - run: npm run build
            working-directory: "./javascript"
          - run: |
              JS_DIR=$(pwd)
              echo "javascript directory: ${JS_DIR}"
              mkdir /tmp/a
              cd /tmp/a
              DEBUG=zombie-cli::setup node $JS_DIR/packages/cli/dist/cli.js setup -y all
            working-directory: "./javascript"
          - run: ls -ltr /tmp/a

default:
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  interruptible:                   true

stages:
  - lint
  - build
  - test
  - package
  - check
  - publish
  - deploy

variables:
  CI_IMAGE:                        "node:16.10"
  DOCKERFILE:                      scripts/ci/docker/zombienet_injected.Dockerfile
  DOCKERHUB_REPO:                  paritytech
  IMAGE_NAME:                      $DOCKERHUB_REPO/zombienet

.kubernetes-env:                   &kubernetes-env
  image:                           $CI_IMAGE
  tags:
    - kubernetes-parity-build

# run jobs only on PRs
.test-refs:                        &test-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs

# run jobs always
.common-refs:                      &common-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "main"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # i.e. v1.0, v2.1rc1

# run jobs only on master and publish
.publish-refs:                     &publish-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "main"
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # i.e. v1.0, v2.1rc1

# telling gitlab to collect artifacts from artifacts/ folder to path it to other jobs
.collect-artifacts:                &collect-artifacts
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     2 days
    paths:
      - artifacts/

lint:
  stage:                           lint
  <<:                              *kubernetes-env
  <<:                              *common-refs
  script:
    - npm install
    - npm run lint

test:
  stage:                           test
  <<:                              *kubernetes-env
  <<:                              *common-refs
  script:
    - npm install
    # - npm run test
    - echo testme

build:
  stage:                           build
  <<:                              *kubernetes-env
  <<:                              *common-refs
  <<:                              *collect-artifacts
  script:
    - mkdir -p artifacts
    - npm install
    - npm run clean
    - npm run build
    - cp -r dist/ artifacts/
    - cp package* artifacts/

package:
  stage:                           package
  <<:                              *kubernetes-env
  <<:                              *common-refs
  <<:                              *collect-artifacts
  needs:
    - job:                         build
  script:
    - mkdir -p artifacts
    - npm install
    - npm run clean
    - npm run build
    - npm run package
    - cp bins/zombienet-* artifacts/


# template task for building and pushing an image
.build-push-docker-image:          &build-push-docker-image
  script:
    - test "$Docker_Hub_User_Parity" -a "$Docker_Hub_Pass_Parity" ||
        ( echo "no docker credentials provided"; exit 1 )
    - buildah bud
        --format=docker
        --build-arg VCS_REF="${CI_COMMIT_SHA}"
        --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
        --build-arg VERSION="$VERSION"
        --tag "$IMAGE_NAME:$VERSION"
        --tag "$IMAGE_NAME:latest"
        --file "$DOCKERFILE" .
    - echo "$Docker_Hub_Pass_Parity" |
        buildah login --username "$Docker_Hub_User_Parity" --password-stdin docker.io
    - buildah info
    - echo "Effective tags = ${VERSION} latest"
    - buildah push --format=v2s2 "$IMAGE_NAME:$VERSION"
    - buildah push --format=v2s2 "$IMAGE_NAME:latest"
  after_script:
    - buildah logout --all

#check that the image can be build
publish-test:
  stage:                           check
  <<:                              *test-refs
  <<:                              *kubernetes-env
  variables:
    CI_IMAGE:                      quay.io/buildah/stable
  script:
    - buildah bud
        --format=docker
        --build-arg VCS_REF="${CI_COMMIT_SHA}"
        --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
        --build-arg VERSION="${CI_COMMIT_SHORT_SHA}"
        --tag "$IMAGE_NAME:latest"
        --file "$DOCKERFILE" .

publish-docker-pr:
  stage:                           publish
  variables:
    CI_IMAGE:                      quay.io/buildah/stable
    DOCKERHUB_REPO:                paritypr
  before_script:
    - export VERSION=${CI_COMMIT_SHORT_SHA}
    - export Docker_Hub_User_Parity=$PARITYPR_USER
    - export Docker_Hub_Pass_Parity=$PARITYPR_PASS
  <<:                              *kubernetes-env
  <<:                              *common-refs
  <<:                              *build-push-docker-image

publish-docker:
  stage:                           publish
  variables:
    CI_IMAGE:                      quay.io/buildah/stable
  before_script:
    - if [[ "${CI_COMMIT_TAG}" ]]; then
        VERSION=${CI_COMMIT_TAG};
      elif [[ "${CI_COMMIT_SHORT_SHA}" ]]; then
        VERSION=${CI_COMMIT_SHORT_SHA};
      fi
  <<:                              *kubernetes-env
  <<:                              *publish-refs
  <<:                              *build-push-docker-image

zombienet-tests-integration:
  stage:                           deploy
  <<:                              *kubernetes-env
  image:                           "paritypr/zombienet:${CI_COMMIT_SHORT_SHA}"
  <<:                              *common-refs

  variables:
    GH_DIR:                        'https://github.com/paritytech/polkadot/tree/master/zombienet_tests/smoke'

  before_script:
    - echo "Zombienet Tests Parachain smoke test"
    - echo "paritypr/zombienet:${CI_COMMIT_SHORT_SHA}"
    - echo "${GH_DIR}"
    - export DEBUG=zombie*
    - export ZOMBIENET_INTEGRATION_TEST_IMAGE="docker.io/paritypr/polkadot-debug:master"
    - export COL_IMAGE="docker.io/paritypr/colander:master"

  script:
    - /home/nonroot/zombie-net/scripts/ci/run-test-env-manager.sh
        --github-remote-dir="${GH_DIR}"
        --test="0001-parachains-smoke-test.feature"
  allow_failure:                   true
  retry: 2
  tags:
    - zombienet-polkadot-integration-test

# zombienet-tests-integration-pr:
#   stage:                           deploy
#   <<:                              *kubernetes-env
#   image:                           "paritypr/zombienet:${CI_COMMIT_SHORT_SHA}"
#   <<:                              *common-refs

#   variables:
#     GH_DIR:                        'https://github.com/paritytech/polkadot/tree/master/zombienet_tests/functional'

#   before_script:
#     - echo "Zombienet Tests Funcional"
#     - echo "paritypr/zombienet:${CI_COMMIT_SHORT_SHA}"
#     - echo "${GH_DIR}"
#     - export DEBUG=zombie
#     - export ZOMBIENET_INTEGRATION_TEST_IMAGE="docker.io/paritypr/polkadot-debug:master"
#     - export MALUS_IMAGE="docker.io/paritypr/malus:master"
#     - export COL_IMAGE="docker.io/paritypr/colander:master"

#   script:
#     - /home/nonroot/zombie-net/scripts/ci/run-test-env-manager.sh
#         --github-remote-dir="${GH_DIR}"
#         -c 2
#   allow_failure:                   true
#   retry: 2
#   tags:
#     - zombienet-polkadot-integration-test

# zombienet-dummy-chain-upgrade:
#   stage:                           deploy
#   <<:                              *kubernetes-env
#   image:                           "paritypr/zombienet:${CI_COMMIT_SHORT_SHA}"
#   <<:                              *common-refs

#   variables:
#     GH_DIR:                        'https://github.com/paritytech/zombienet/tree/${CI_COMMIT_SHORT_SHA}/tests'

#   before_script:
#     - echo "Zombienet Tests Parachain Upgrade"
#     - echo "paritypr/zombienet:${CI_COMMIT_SHORT_SHA}"
#     - echo "${GH_DIR}"
#     - export DEBUG=zombie*

#   script:
#     - /home/nonroot/zombie-net/scripts/ci/run-test-local-env-manager.sh
#         --test="0004-parachains-upgrade-smoke-test.feature"
#   allow_failure:                   true
#   retry: 2
#   tags:
#     - zombienet-polkadot-integration-test

zombienet-logs-assertion:
  stage:                           deploy
  <<:                              *kubernetes-env
  image:                           "paritypr/zombienet:${CI_COMMIT_SHORT_SHA}"
  <<:                              *common-refs

  variables:
    GH_DIR:                        'https://github.com/paritytech/zombienet/tree/${CI_COMMIT_SHORT_SHA}/tests'

  before_script:
    - echo "Zombienet Tests Logs"
    - echo "paritypr/zombienet:${CI_COMMIT_SHORT_SHA}"
    - echo "${GH_DIR}"
    - export DEBUG=zombie*
    - export ZOMBIENET_INTEGRATION_TEST_IMAGE="docker.io/paritypr/polkadot-debug:master"
    - export COL_IMAGE="docker.io/paritypr/colander:4519"

  script:
    - /home/nonroot/zombie-net/scripts/ci/run-test-local-env-manager.sh
        --test="0006-logs.feature"
  allow_failure:                   true
  retry: 2
  tags:
    - zombienet-polkadot-integration-test

zombienet-system-event-assertion:
  stage:                           deploy
  <<:                              *kubernetes-env
  image:                           "paritypr/zombienet:${CI_COMMIT_SHORT_SHA}"
  <<:                              *common-refs

  variables:
    GH_DIR:                        'https://github.com/paritytech/zombienet/tree/${CI_COMMIT_SHORT_SHA}/tests'

  before_script:
    - echo "Zombienet Tests System Event"
    - echo "paritypr/zombienet:${CI_COMMIT_SHORT_SHA}"
    - echo "${GH_DIR}"
    - export DEBUG=zombie*
    - export ZOMBIENET_INTEGRATION_TEST_IMAGE="docker.io/paritypr/polkadot-debug:master"
    - export COL_IMAGE="docker.io/paritypr/colander:4519"

  script:
    - /home/nonroot/zombie-net/scripts/ci/run-test-local-env-manager.sh
        --test="0007-events.feature"
  allow_failure:                   true
  retry: 2
  tags:
    - zombienet-polkadot-integration-test

zombienet-custom-js-assertion:
  stage:                           deploy
  <<:                              *kubernetes-env
  image:                           "paritypr/zombienet:${CI_COMMIT_SHORT_SHA}"
  <<:                              *common-refs

  variables:
    GH_DIR:                        'https://github.com/paritytech/zombienet/tree/${CI_COMMIT_SHORT_SHA}/tests'

  before_script:
    - echo "Zombienet Tests Custom JS"
    - echo "paritypr/zombienet:${CI_COMMIT_SHORT_SHA}"
    - echo "${GH_DIR}"
    - export DEBUG=zombie*
    - export ZOMBIENET_INTEGRATION_TEST_IMAGE="docker.io/paritypr/polkadot-debug:master"
    - export COL_IMAGE="docker.io/paritypr/colander:4519"

  script:
    - /home/nonroot/zombie-net/scripts/ci/run-test-local-env-manager.sh
        --test="0008-custom-js.feature"
  allow_failure:                   true
  retry: 2
  tags:
    - zombienet-polkadot-integration-test

zombienet-histogram-assertion:
  stage:                           deploy
  <<:                              *kubernetes-env
  image:                           "paritypr/zombienet:${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # i.e. v1.0, v2.1rc1
  # needs:
  #   - job:                         publish-docker-pr

  variables:
    GH_DIR:                        'https://github.com/paritytech/zombienet/tree/${CI_COMMIT_SHORT_SHA}/tests'

  before_script:
    - echo "Zombienet Tests Histogram"
    - echo "paritypr/zombienet:${CI_COMMIT_SHORT_SHA}"
    - echo "${GH_DIR}"
    - export DEBUG=zombie*
    - export ZOMBIENET_INTEGRATION_TEST_IMAGE="docker.io/paritypr/polkadot-debug:master"
    - export COL_IMAGE="docker.io/paritypr/colander:4519"

  script:
    - /home/nonroot/zombie-net/scripts/ci/run-test-local-env-manager.sh
        --test="0010-histogram-smoke-test.feature"
  allow_failure:                   true
  retry: 2
  tags:
    - zombienet-polkadot-integration-test

zombienet-update-genesis-config:
  stage:                           deploy
  <<:                              *kubernetes-env
  image:                           "paritypr/zombienet:${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # i.e. v1.0, v2.1rc1
  # needs:
  #   - job:                         publish-docker-pr

  variables:
    GH_DIR:                        'https://github.com/paritytech/zombienet/tree/${CI_COMMIT_SHORT_SHA}/tests'

  before_script:
    - echo "Zombienet Tests Genesis config update"
    - echo "paritypr/zombienet:${CI_COMMIT_SHORT_SHA}"
    - echo "${GH_DIR}"
    - export DEBUG=zombie*
    - export ZOMBIENET_INTEGRATION_TEST_IMAGE="docker.io/paritypr/polkadot-debug:master"
    - export COL_IMAGE="docker.io/paritypr/colander:4519"

  script:
    - /home/nonroot/zombie-net/scripts/ci/run-test-local-env-manager.sh
        --test="0011-update-genesis-config.feature"
  allow_failure:                   true
  retry: 2
  tags:
    - zombienet-polkadot-integration-test

zombienet-scale-net-config:
  stage:                           deploy
  <<:                              *kubernetes-env
  image:                           "paritypr/zombienet:${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # i.e. v1.0, v2.1rc1
  # needs:
  #   - job:                         publish-docker-pr

  variables:
    GH_DIR:                        'https://github.com/paritytech/zombienet/tree/${CI_COMMIT_SHORT_SHA}/tests/scale-net'

  before_script:
    - echo "Zombienet Tests Scale Net"
    - echo "paritypr/zombienet:${CI_COMMIT_SHORT_SHA}"
    - echo "${GH_DIR}"
    - export DEBUG=zombie*
    - export ZOMBIENET_INTEGRATION_TEST_IMAGE="docker.io/paritypr/polkadot-debug:master"
    - export COL_IMAGE="docker.io/paritypr/colander:4519"

  script:
    - /home/nonroot/zombie-net/scripts/ci/run-test-local-env-manager.sh
        --test="0001-scale-net.feature"
  allow_failure:                   true
  retry: 2
  tags:
    - zombienet-polkadot-integration-test
